name: Build, Push, and Deploy Schedules

on:
  push:
    branches: ["bd_microservices"]
    paths:
      - "backend/Schedules/**"

  pull_request:
    branches:
      - "QA"
      - "main"
    paths:
      - "backend/Schedules/**"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v3

      - name: 🔐 Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🛠️ Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/schedules:latest \
            --file backend/Schedules/Dockerfile \
            --build-arg BD_USER=${{ secrets.BD_USER }} \
            --build-arg BD_HOST=${{ secrets.BD_HOST }} \
            --build-arg BD_DATABASE=${{ secrets.BD_DATABASE }} \
            --build-arg BD_PASSWORD=${{ secrets.BD_PASSWORD }} \
            --build-arg BD_PORT=${{ secrets.BD_PORT }} \
            backend/Schedules/

          docker push ${{ secrets.DOCKER_USERNAME }}/schedules:latest

  deploy-to-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: 🚀 Deploy to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST_SCHEDULES }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # 1) Update the system and install Docker if necessary
            sudo yum update -y
            if ! command -v docker &> /dev/null; then
              echo "Docker not found, installing..."
              sudo yum install -y docker
              sudo systemctl start docker
              sudo systemctl enable docker
            fi

            # 2) Stop and remove the previous container
            sudo docker stop schedules-container || true
            sudo docker rm schedules-container || true

            # 3) Pull the latest image from Docker Hub
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/schedules:latest

            # 4) Run the container with environment variables
            sudo docker run -d \
              -e DB_USER=${{ secrets.DB_USER }} \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_DATABASE=${{ secrets.DB_DATABASESCH }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e DB_PORT=${{ secrets.BD_PORT }} \
              -p 3017:3017 \
              --name schedules-container ${{ secrets.DOCKER_USERNAME }}/schedules:latest

            # 5) Clean up old images
            sudo docker image prune -f
