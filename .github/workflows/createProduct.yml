name: Build, Push, and Deploy Create Product

on:
  push:
    branches: [ "bd_microservices" ]
    paths:
      - "backend/Products/createProduct/**"

  pull_request:
    branches:
      - "QA"
      - "main"
    paths:
      - "backend/Products/createProduct/**"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v3

    - name: 🔐 Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 🛠️ Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/create-product:latest \
          -f backend/Products/createProduct/Dockerfile \
          backend/Products/createProduct/

        docker push ${{ secrets.DOCKER_USERNAME }}/create-product:latest

  deploy-to-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: 🔑 Set permissions for private key
      run: |
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > proyectof.pem
        chmod 600 proyectof.pem

    - name: 🚀 Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i proyectof.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
        # 1) Actualizar el sistema e instalar Docker si es necesario
        sudo yum update -y
        if ! command -v docker &> /dev/null
        then
          echo "Docker no encontrado, instalando..."
          sudo yum install -y docker
          sudo systemctl start docker
          sudo systemctl enable docker
        fi

        # 2) Detener y eliminar contenedor previo
        sudo docker stop create-product-container || true
        sudo docker rm create-product-container || true

        # 3) Descargar la nueva imagen desde Docker Hub
        sudo docker pull ${{ secrets.DOCKER_USERNAME }}/create-product:latest

        # 4) Ejecutar el contenedor con variables de entorno
        sudo docker run -d \
          -e DB_USER=postgres \
          -e DB_HOST=database-2.c9o0sgyu0pu7.us-east-1.rds.amazonaws.com \
          -e DB_DATABASE=products \
          -e DB_PASSWORD=postgres.14 \
          -e DB_PORT=5432 \
          -p 3006:3006 \
          --name create-product-container ${{ secrets.DOCKER_USERNAME }}/create-product:latest

        # 5) Limpiar imágenes antiguas
        sudo docker image prune -f
        EOF
