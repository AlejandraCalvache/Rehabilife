name: 🚀 Build and Deploy createProduct Service

on:
  push:
    paths:
      - 'backend/Products/createProduct/**'
    branches:
      - bd_microservices

  pull_request:
    paths:
      - 'backend/Products/createProduct/**'
    branches:
      - "QA"
      - "main"

jobs:
  build-and-push:
    name: 📦 Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Clone the repository
        uses: actions/checkout@v3

      - name: 🐳 Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 🛠️ Build Docker Image
        run: |
          docker build \
            --build-arg DB_USER=${{ secrets.DB_USER }} \
            --build-arg DB_HOST=${{ secrets.DB_HOST }} \
            --build-arg DB_DATABASE=${{ secrets.DB_DATABASE }} \
            --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --build-arg DB_PORT=${{ secrets.DB_PORT }} \
            -t ${{ secrets.DOCKER_USERNAME }}/createproduct:latest backend/Products/createProduct

          docker tag ${{ secrets.DOCKER_USERNAME }}/createproduct:latest ${{ secrets.DOCKER_USERNAME }}/createproduct:${{ github.sha }}

      - name: 📤 Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/createproduct:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/createproduct:${{ github.sha }}

  deploy-to-ec2:
    name: 🚀 Deploy createProduct Service on AWS EC2
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: 🔄 Deploy on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_KEY }} ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            echo "📡 Pulling latest Docker image..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/createproduct:latest

            echo "🛑 Stopping and removing old container..."
            sudo docker stop createproduct || true
            sudo docker rm createproduct || true

            echo "🚀 Running the new container..."
            sudo docker run -d --name createproduct -p 3006:3006 \
              -e DB_USER=${{ secrets.DB_USER }} \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_DATABASE=${{ secrets.DB_DATABASE }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e DB_PORT=${{ secrets.DB_PORT }} \
              ${{ secrets.DOCKER_USERNAME }}/createproduct:latest

            echo "✅ Deployment successful!"
          EOF
