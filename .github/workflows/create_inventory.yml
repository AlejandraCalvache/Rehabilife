name: Build and Deploy Create-Inventory Service

on:
  push:
    paths:
      - 'backend/Inventories/create-inventories/**'
    branches:
      - bd_microservices

jobs:
  build-and-push:
    name: 🏗️ Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # 📥 Checkout del código fuente
      - name: 🛠️ Checkout repository
        uses: actions/checkout@v4

      # 🔧 Configurar Docker Buildx
      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 🔐 Iniciar sesión en Docker Hub
      - name: 🔐 Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 📦 Construir y subir la imagen de Docker
      - name: 📦 Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/create-inventories:latest \
            -f backend/Inventories/create-inventories/Dockerfile \
            backend/Inventories/create-inventories

          docker push ${{ secrets.DOCKER_USERNAME }}/create-inventories:latest

  deploy:
    name: 🚀 Deploy to AWS EC2
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      # 📡 Conectar a AWS EC2 y desplegar el servicio
      - name: Connect to AWS EC2 and Deploy
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "🔧 Updating system and installing Docker if necessary"
            sudo yum update -y
            sudo yum install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker

            echo "🛑 Stopping and removing existing container"
            sudo docker stop create-inventories || true
            sudo docker rm create-inventories || true

            echo "🗑️ Cleaning unused Docker images"
            sudo docker system prune -f

            echo "🐳 Pulling latest Docker image"
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/create-inventories:latest

            echo "🚀 Running new container"
            sudo docker run -d \
              --name create-inventories \
              -p 5000:5000 \
              -e MYSQL_HOST="${{ secrets.MYSQL_HOST }}" \
              -e MYSQL_USER="${{ secrets.MYSQL_USER }}" \
              -e MYSQL_PASSWORD="${{ secrets.MYSQL_PASSWORD }}" \
              -e MYSQL_DB="${{ secrets.MYSQL_DB }}" \
              -e JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}" \
              ${{ secrets.DOCKER_USERNAME }}/create-inventories:latest
