name: Build and Push Docker Image Create-Inventory Service

on:
  push:
    paths:
      - 'backend/Inventories/create-inventories/**'
    branches:
      - bd_microservices

jobs:
  build-and-deploy:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: üõ†Ô∏è Checkout repository
        uses: actions/checkout@v4

      - name: üîß Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: üì¶ Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/create-inventory:latest \
            -f backend/Inventories/create-inventories/Dockerfile \
            backend/Inventories/create-inventories
          docker push ${{ secrets.DOCKER_USERNAME }}/create-inventory:latest

  deploy:
  name: Deploy to AWS EC2
  needs: build-and-deploy
  runs-on: ubuntu-latest

  steps:
    - name: Connect to AWS EC2 and Deploy
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_PUBLIC_IP }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # üîß Actualiza paquetes
          sudo yum update -y

          # üê≥ Instala Docker si no est√° instalado
          if ! command -v docker &> /dev/null; then
            echo "Docker no encontrado. Instalando..."
            sudo yum install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker $USER
            newgrp docker
          else
            echo "Docker ya est√° instalado."
          fi

          # üõë Det√©n el contenedor anterior si existe
          sudo docker stop create-inventory || true
          sudo docker rm create-inventory || true

          # üê≥ Pullear la √∫ltima imagen de Docker
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/create-inventory:latest

          # üöÄ Ejecutar el nuevo contenedor
          sudo docker run -d \
            --name create-inventory \
            -p 5000:5000 \
            -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
            -e MYSQL_USER=${{ secrets.MYSQL_USER }} \
            -e MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
            -e MYSQL_DB=${{ secrets.MYSQL_DB }} \
            -e JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
            ${{ secrets.DOCKER_USERNAME }}/create-inventory:latest
